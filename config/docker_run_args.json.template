{
    "run_args": [
        "--name", "#dev_container_name",
        
        "--rm",

        // Indicates whether the script is being executed inside a Docker container. 
        // Useful for conditional logic inside scripts
        "-e", "INSIDE_CONTAINER=true",

        // For reconstruncting the host-paths to mount volumes, which should be used in Docker-outside-of-Docker (Dood)
        // Usually the machine.json of the corresponding machine will be used, without using this variable.
        // Sometime it might be benefitial to test the code which is targetet to a remote machine on the host machine.
        // In these cases, this environment variable can be used.
        "-e", "PROJECT_PATH=#project_dir",

        // Creates local bind mounts
        "-v", "#project_dir/bind-mounts/workspace:/workspace",
        "-v", "#project_dir/bind-mounts/catkin-ws-src:/home/myuser/catkin_ws/src",

        // --- Security Relevant Settings ---
        // Exercise caution when using these settings.

        // Configures the container to use the Docker host's network namespace. 
        // Used to control ros_communication_devcontainers of other machines via ssh and to exchange ros topics 
        // Alternative: use custom narrow network access for heightened security (e.g. bridge networks)
        // "--network", "host",

        // Grants the container access to the host's Docker socket. 
        // Essential for Docker-outside-of-Docker (DooD) scenarios, allowing containerized Docker commands.
        // "-v", "/var/run/docker.sock:/var/run/docker.sock",

        // Enables GUI applications within the container, such as launching gnome-terminals. 
        // Alternative: use local terminals to avoid this setting for enhanced security.
        // "-v", "/tmp/.X11-unix:/tmp/.X11-unix",
        // "-e", "DISPLAY",

        // Enables SSH Agent Forwarding
        // This is done automatically by VSC, but when working via CLI this setting is required
        // "-e", "SSH_AUTH_SOCK",
        // "-v", "#ssh_auth_sock:#ssh_auth_sock"
	]
}
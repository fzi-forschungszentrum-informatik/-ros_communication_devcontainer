---
parameters:
  dir_path: # will be set automatically by create_session.py
  before_command: # e.g. "echo test"
  ros_ip_key: # e.g. "machine_a ip"
  ros_master_hostname: "localhost"
  ros_master_port: 11311

  ros_core: false

  statistics: false

  log: false
  log_prefix: "log_"
  log_topics_file: "/workspace/communication_session/log_topics.txt"

  master_discovery: false
  discover_host_keys: # e.g. "machine_b ip + machine_c ip"
  rpc_port: 11611

  master_sync: false
  sync_topics: 
  sync_remote_nodes: false
  check_host: true

  compression_method_1: bzip2 # gzip, zlib
  compression_method_2: bzip2 # gzip, zlib
  compressed_topic_1: # e.g. "/costmap/a/compressed"
  compressed_topic_2: # e.g. "/costmap/b/compressed"
  compress_costmap: false
  map_topic_1: # e.g. "/costmap/a"
  map_topic_2: # e.g. "/costmap/b"
  decompress_costmap: false
  decompressed_topic_1: # e.g. "/costmap/a"
  decompressed_topic_2: # e.g. "/costmap/b"

  re: false
  rere: false
  relay_topic_1:
  relay_topic_2:
  relay_topic_3:
  relay_topic_4:

  re2: false
  rere2: false
  relay_topic_5:
  relay_topic_6:
  relay_topic_7:
  relay_topic_8:

  wifi: false
  speed_test: false
  traffic_monitor: false
  wifi_logger: false
  iwconfig_instead_of_snmp: # true / false
  snmp_router_ip_key:
  snmp_community: "public"

  cust: false
  custom_1:
  custom_2:
  custom_3:
  custom_4:

  cust2: false
  custom_5:
  custom_6:
  custom_7:
  custom_8:

common:
  before_commands:
    - if [ '${before_command}' != "None" ]; then ${before_command}; fi
    - export ROS_IP=$(/workspace/communication_session/resolve_keys.py -k "${ros_ip_key}")
    - echo ${ROS_IP}
    - export ROS_MASTER_URI=http://${ros_master_hostname}:${ros_master_port}

windows:
  - name: CORE
    if: ros_core
    splits:
      - commands:
        - roscore --port ${ros_master_port}
    delay: 2
  - name: LOG
    if: log
    layout: even-vertical
    splits:
      - commands:
        - export log_topics=$(tr '\n' ' ' < ${log_topics_file})
        - rosbag record --split --size=1024 -o ${dir_path}/${log_prefix} ${log_topics}
    delay: 1
  - name: DISC
    if: master_discovery
    splits:
      - commands:
        - echo ${discover_host_keys}
        - export DISCOVER_HOSTS=$(/workspace/communication_session/resolve_keys.py -k "${discover_host_keys}")
        - echo ${DISCOVER_HOSTS}
        - export DISCOVER_HOSTS_COMMA=${DISCOVER_HOSTS// /,}
        - echo ${DISCOVER_HOSTS_COMMA}
        - rosrun fkie_master_discovery master_discovery _send_mcast:=False _listen_mcast:=False _robot_hosts:=[${DISCOVER_HOSTS_COMMA}] _rpc_port:=${rpc_port}
  - name: SYNC
    if: master_sync
    splits:
      - commands:
        - export SYNC_TOPICS="${sync_topics}"; export SYNC_TOPICS_COMMA=${SYNC_TOPICS// /,}; echo ${SYNC_TOPICS_COMMA}
        - rosrun fkie_master_sync master_sync _sync_topics:=[${SYNC_TOPICS_COMMA}] _sync_remote_nodes:=${sync_remote_nodes} _check_host:=${check_host}
  - name: COMP
    if: compress_costmap
    splits:
      - commands:
        - if [ ${map_topic_1} == "None" ]; then exit; fi
        - rosrun costmap_compress_decompress costmap_compression_node __name:=costmap_compression_node1 _compression_algorithm:=${compression_method_1} _map_topic:=${map_topic_1} _compression_topic:=${compressed_topic_1}
      - commands:
        - if [ ${map_topic_2} == "None" ]; then exit; fi
        - rosrun costmap_compress_decompress costmap_compression_node __name:=costmap_compression_node2 _compression_algorithm:=${compression_method_2} _map_topic:=${map_topic_2} _compression_topic:=${compressed_topic_2}
  - name: DECO
    if: decompress_costmap
    splits:
      - commands:
        - if [ ${decompressed_topic_1} == "None" ]; then exit; fi
        - rosrun costmap_compress_decompress costmap_decompression_node __name:=costmap_decompression_node1 _compression_algorithm:=${compression_method_1} _compression_topic:=${compressed_topic_1} _decompression_topic:=${decompressed_topic_1} 
      - commands:
        - if [ ${decompressed_topic_2} == "None" ]; then exit; fi
        - rosrun costmap_compress_decompress costmap_decompression_node __name:=costmap_decompression_node2 _compression_algorithm:=${compression_method_2} _compression_topic:=${compressed_topic_2} _decompression_topic:=${decompressed_topic_2} 
  - name: RE
    if: re
    layout: even-vertical
    splits:
      - commands:
        - if [ ${relay_topic_1} == "None" ]; then exit; fi
        - if [ "${rere}" == True ] || [ "${rere}" == true ]; then relay_origin="${relay_topic_1}/relay"; else relay_origin="${relay_topic_1}"; fi
        - if [ "${rere}" == True ] || [ "${rere}" == true ]; then relay_target="${relay_topic_1}"; else relay_target="${relay_topic_1}/relay"; fi
        - rosrun topic_tools relay "$relay_origin" "$relay_target"
      - commands:
        - if [ ${relay_topic_2} == "None" ]; then exit; fi
        - rosrun topic_tools relay ${relay_topic_2} ${relay_topic_2}/relay
      - commands:
        - if [ ${relay_topic_3} == "None" ]; then exit; fi
        - rosrun topic_tools relay ${relay_topic_3} ${relay_topic_3}/relay
      - commands:
        - if [ ${relay_topic_4} == "None" ]; then exit; fi
        - rosrun topic_tools relay ${relay_topic_4} ${relay_topic_4}/relay
  - name: RE2
    if: re2
    layout: even-vertical
    splits:
      - commands:
        - if [ ${relay_topic_5} == "None" ]; then exit; fi
        - rosrun topic_tools relay ${relay_topic_5} ${relay_topic_5}/relay
      - commands:
        - if [ ${relay_topic_6} == "None" ]; then exit; fi
        - rosrun topic_tools relay ${relay_topic_6} ${relay_topic_6}/relay
      - commands:
        - if [ ${relay_topic_7} == "None" ]; then exit; fi
        - rosrun topic_tools relay ${relay_topic_7} ${relay_topic_7}/relay
      - commands:
        - if [ ${relay_topic_8} == "None" ]; then exit; fi
        - rosrun topic_tools relay ${relay_topic_8} ${relay_topic_8}/relay
  - name: WIFI
    if: wifi
    layout: even-vertical
    splits:
      - commands:
        - if [ "${speed_test}" != True ] && [ "${speed_test}" != true ]; then exit; fi
        - /workspace/communication_session/speed_test.py
      - commands:
        - if [ "${traffic_monitor}" != True ] && [ "${traffic_monitor}" != true ]; then exit; fi
        - /workspace/communication_session/traffic_monitor.py
      - commands:
        - if [ "${wifi_logger}" != True ] && [ "${wifi_logger}" != true ]; then exit; fi
        - if [ ${snmp_router_ip_key} != "None" ]; then export snmp_router_flag="--snmp-router-ip "$(/workspace/communication_session/resolve_keys.py -k "${snmp_router_ip_key}"); fi
        - /workspace/communication_session/logger.py --iwconfig-instead-of-snmp ${iwconfig_instead_of_snmp} ${snmp_router_flag} --snmp-community ${snmp_community}
  - name: CUST
    if: cust
    layout: even-vertical
    splits:
      - commands:
        - if [ "${custom_1}" == "None" ]; then exit; fi
        - "${custom_1}"
      - commands:
        - if [ "${custom_2}" == "None" ]; then exit; fi
        - "${custom_2}"
      - commands:
        - if [ "${custom_3}" == "None" ]; then exit; fi
        - "${custom_3}"
      - commands:
        - if [ "${custom_4}" == "None" ]; then exit; fi
        - "${custom_4}"
  - name: CUST2
    if: cust2
    layout: even-vertical
    splits:
      - commands:
        - if [ "${custom_5}" == "None" ]; then exit; fi
        - "${custom_5}"
      - commands:
        - if [ "${custom_6}" == "None" ]; then exit; fi
        - "${custom_6}"
      - commands:
        - if [ "${custom_7}" == "None" ]; then exit; fi
        - "${custom_7}"
      - commands:
        - if [ "${custom_8}" == "None" ]; then exit; fi
        - "${custom_8}"